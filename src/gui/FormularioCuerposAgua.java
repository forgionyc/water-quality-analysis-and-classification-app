/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import Model.CuerpoDeAgua;
import controller.GestionCuerposAgua;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Knatos
 */
public class FormularioCuerposAgua extends javax.swing.JFrame {

    /**
     * Creates new form FormularioCuerposAgua
     */
    
    public DefaultListModel filas;
    
    public ArrayList<String> lista = new ArrayList<String>();
    
    public FormularioCuerposAgua() {
        initComponents();
        verlista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre1 = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtTipoCuerpoAgua = new javax.swing.JTextField();
        txtMunicipio = new javax.swing.JTextField();
        txtTipoAgua = new javax.swing.JTextField();
        txtirca = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        btnProcesar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaSalida = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaEntrada = new javax.swing.JList<>();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        msgerror = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lector del nivel de la calidad del agua");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(720, 620));

        jLabel1.setText("Nombre");

        jLabel2.setText("Id./Busqueda");

        jLabel3.setText("Municipio");

        jLabel4.setText("Tipo de cuerpo de agua");

        jLabel5.setText("Tipo de agua");

        jLabel6.setText("IRCA");

        txtNombre1.setToolTipText("Ingrese el nombre del Cuerpo de Agua.");

        txtId.setToolTipText("Ingrese el Id. del Cuerpo de Agua o el Id. del Cuerpo de Agua a buscar en la base de datos.");
        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });

        txtTipoCuerpoAgua.setToolTipText("Ingrese el tipo de Cuerpo de Agua.");

        txtMunicipio.setToolTipText("Ingrese el Municipio donde esta ubicado el Cuerpo de Agua.");

        txtTipoAgua.setToolTipText("Ingrese el tipo de Agua.");

        txtirca.setToolTipText("Ingrese el índice de riesgo de la calidad del agua (IRCA). ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("Lector del nivel de la calidad del agua en el Atlantico");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 16)); // NOI18N
        jLabel8.setText("Datos de entrada");
        jLabel8.setToolTipText("<html>Hace referencia a los datos de Entrada y <br>\na los datos almacenados en la DataBase.");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 16)); // NOI18N
        jLabel9.setText("Datos de salida");

        btnIngresar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnIngresar.setText("Ingresar datos");
        btnIngresar.setToolTipText("Presiona para ingresar los datos");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnProcesar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnProcesar.setText("Procesar datos");
        btnProcesar.setToolTipText("Presiona para procesar los datos.");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        listaSalida.setToolTipText("<html>Datos procesados equivalentes a:<br>\n1. Indicar cuál fue el nivel de riesgo de cada cuerpo de agua.<br>\n2. Indicar cuántos cuerpos de agua tienen un nivel de riesgo MEDIO o inferior.<br>\n3. Indicar el Nombre de los cuerpos de agua que tienen un nivel de riesgo MEDIO, en caso de no haber ninguno devolver NA.<br>\n4. Indicar el nombre del cuerpo de agua con la clasificación IRCA más baja encontrada y su número identificador.<br>\n");
        jScrollPane3.setViewportView(listaSalida);

        listaEntrada.setToolTipText("Datos ingresados al programa y almacenados en la base de datos.");
        jScrollPane4.setViewportView(listaEntrada);

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setText("Eliminar datos");
        btnEliminar.setToolTipText("Presiona para procesar los datos.");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnModificar.setText("Modificar datos");
        btnModificar.setToolTipText("Presiona para procesar los datos.");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        msgerror.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("INSTRUCCIONES");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("1. Para ingresar los datos en la base de datos, llenar todos los campos correspondientes y presionar el boton Ingresar datos\n2. Para realizar la busqueda de los Id. cuerpo en la base de datos solo basta con colocar el id en el campo Id. y cambiar el \nfoco ya sea clickeando otro campo o con TAB, si el Id. existe los campos se llenan automaticamente.\n3. Para procesar los datos solo es necesario presionar el boton procesar datos, se procesaran todos los datos de la base de\ndatos.\n4. Para modificar ingresar el Id. a modificar los campos se llenaran automaticamente, a continuación modificar los campos \nnecesarios y presionar el boton modificar para ver los cambios reflejados en la base de datos.\n5. Para eliminar ingresar el Id. a modificar los campos se llenaran automaticamente, a continuación presiona el boton \neliminar  y el Id. sera eliminado de la base de datos.");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtTipoCuerpoAgua, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtirca, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTipoAgua, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificar)
                            .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(124, 124, 124))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(msgerror, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel8)
                        .addGap(220, 220, 220)
                        .addComponent(jLabel9))
                    .addComponent(jScrollPane1))
                .addGap(0, 33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(msgerror, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIngresar)
                        .addGap(12, 12, 12)
                        .addComponent(btnProcesar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTipoCuerpoAgua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(4, 4, 4)
                                .addComponent(txtTipoAgua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(6, 6, 6)
                                .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(6, 6, 6)
                                .addComponent(txtirca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        //lista.add(txtNombre1.getText()+" "+txtId.getText()+" "+txtMunicipio.getText()+" "+txtTipoCuerpoAgua.getText()+" "+txtTipoAgua.getText()+" "+txtirca.getText());
        if(txtTipoCuerpoAgua.getText().isEmpty()){
            System.out.println("No hay Datos para ingresar");
            msgerror.setText("Error: Ingrese Datos Validos...");
        }else
        {
        GestionCuerposAgua.crearCuerposAgua(
                txtTipoCuerpoAgua.getText(),
                txtTipoAgua.getText(),
                Double.parseDouble(txtirca.getText()),
                txtNombre1.getText(),
                Integer.parseInt(txtId.getText()),
                txtMunicipio.getText());
        
        msgerror.setText("Informacion almacenada en la base de datos");
        }
        verlista();
        //procesar();
        limpiarCampos();            
    }//GEN-LAST:event_btnIngresarActionPerformed
    
    public void limpiarCampos(){
        txtirca.setText(null);
        txtNombre1.setText(null);
        txtMunicipio.setText(null);
        txtTipoAgua.setText(null);
        txtTipoCuerpoAgua.setText(null);
        txtId.setText(null);
       
        txtId.requestFocus();
    }
    
//metodo general para visualizar la lista en la ventana
    public void verlista(){
        filas = new DefaultListModel();
        
        filas.addAll(GestionCuerposAgua.listarCuerpos());
        
        listaEntrada.setModel(filas);
    }
    
    public void procesar(){
        filas = new DefaultListModel();
        // adiciono una lista de tipo String se llama (lista)
        filas.addAll(GestionCuerposAgua.procesamiento());
        // se adicionar al componente de lista
        listaSalida.setModel(filas);
    }
    
    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
        // TODO add your handling code here:
        filas = new DefaultListModel();
        
        filas.addAll(GestionCuerposAgua.procesamiento());
        
        listaSalida.setModel(filas);
        
    }//GEN-LAST:event_btnProcesarActionPerformed

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
        // TODO add your handling code here:
        CuerpoDeAgua consultaID = GestionCuerposAgua.consultaID(
                txtId.getText());

        //Operador terniario funciona como un if(consultaID!=null)
        //consultaID es la consulta logica !=null osea que es positiva si es
        //y ?consultaID.getNombre():null); ? significa que Y EN CASO de que sea resultado negativo
        //NULL limpia el texto.
        txtNombre1.setText(consultaID!=null?consultaID.getNombre():null);
        txtTipoCuerpoAgua.setText(consultaID!=null?consultaID.getTipoCuerpo():null);
        txtMunicipio.setText(consultaID!=null?consultaID.getMunicipio():null);
        txtTipoAgua.setText(consultaID!=null?consultaID.getTipoAgua():null);
        txtirca.setText(consultaID!=null?Double.toString(consultaID.getIrca()):null);
    }//GEN-LAST:event_txtIdFocusLost

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        if (txtTipoCuerpoAgua.getText().isEmpty()){
            System.out.println("No hay Datos para eliminar");
            msgerror.setText("Error: No hay Datos para eliminar.");
        }else
        {
        GestionCuerposAgua.eliminarCuerposAgua(txtId.getText());
        msgerror.setText("Informacion eliminada de la base de datos.");
        } 
        verlista();    
        limpiarCampos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        if (txtTipoCuerpoAgua.getText().isEmpty()){
            System.out.println("No hay Datos para modificar");
            msgerror.setText("Error: No hay Datos para modificar.");
        }else
        {
        GestionCuerposAgua.editarCuerposAgua(
                txtTipoCuerpoAgua.getText(),
                txtTipoAgua.getText(),
                Double.parseDouble(txtirca.getText()),
                txtNombre1.getText(),
                Integer.parseInt(txtId.getText()),
                txtMunicipio.getText());
        msgerror.setText("Informacion modificada.");
        }
        verlista();
        limpiarCampos();
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioCuerposAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioCuerposAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioCuerposAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioCuerposAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioCuerposAgua().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> listaEntrada;
    private javax.swing.JList<String> listaSalida;
    private javax.swing.JLabel msgerror;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNombre1;
    private javax.swing.JTextField txtTipoAgua;
    private javax.swing.JTextField txtTipoCuerpoAgua;
    private javax.swing.JTextField txtirca;
    // End of variables declaration//GEN-END:variables
}
